name: Deploy static content to GitHub Pages and OSS

# 触发条件：当主分支有推送时触发
on:
  push:
    branches: ["main"]

# 设置 GITHUB_TOKEN 的权限
permissions:
  contents: read  # 允许读取仓库内容
  pages: write   # 允许写入 GitHub Pages
  id-token: write  # 允许写入 ID 令牌

# 并发控制：只允许一个部署任务运行，不取消正在进行的任务
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # 部署到 GitHub Pages 的任务
  deploy-pages:
    runs-on: ubuntu-latest  # 运行在最新的 Ubuntu 环境
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # 检出代码库

      - name: Setup Pages
        uses: actions/configure-pages@v5
        # 配置 GitHub Pages

      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: '.'
        # 上传构建的静态文件到 GitHub Pages

      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4
        # 部署到 GitHub Pages

  # 上传到阿里云 OSS 的任务
  upload-oss:
    runs-on: ubuntu-latest  # 运行在最新的 Ubuntu 环境
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        # 检出代码库

      - name: Upload to OSS
        uses: aliyun/setup-aliyun-cli-action@v1
        with:
          accessKeyId: ${{ secrets.OSS_ACCESS_KEY_ID }}
          accessKeySecret: ${{ secrets.OSS_ACCESS_KEY_SECRET }}
          endpoint: ${{ secrets.OSS_ENDPOINT }}
          bucket: ${{ secrets.OSS_BUCKET_NAME }}
          source: '.'
          target: '/Blog'
        # 使用 aliyun/oss-upload-action 上传文件到阿里云 OSS
        # 需要设置以下 Secrets：
        # OSS_ACCESS_KEY_ID: OSS 访问密钥 ID
        # OSS_ACCESS_KEY_SECRET: OSS 访问密钥 Secret
        # OSS_ENDPOINT: OSS 服务端点
        # OSS_BUCKET_NAME: OSS 存储桶名称
        # source: 要上传的文件或目录
        # target: OSS 目标目录
