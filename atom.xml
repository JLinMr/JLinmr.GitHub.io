<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>梦爱吃鱼</title>
  
  <subtitle>日子清静</subtitle>
  <link href="https://blog.bsgun.cn/atom.xml" rel="self"/>
  
  <link href="https://blog.bsgun.cn/"/>
  <updated>2024-08-09T05:32:23.119Z</updated>
  <id>https://blog.bsgun.cn/</id>
  
  <author>
    <name>梦爱吃鱼</name>
    
  </author>
  
  <generator uri="https://hexo.io/">Hexo</generator>
  
  <entry>
    <title>hexo部署到vercel和服务器多线路解析</title>
    <link href="https://blog.bsgun.cn/posts/78e9208e/"/>
    <id>https://blog.bsgun.cn/posts/78e9208e/</id>
    <published>2024-08-09T05:32:23.119Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="一、前提准备"><a href="#一、前提准备" class="headerlink" title="一、前提准备"></a>一、前提准备</h2><p><strong>阅读此文章之前，你可能需要首先阅读以下的文章才能更好的理解上下文。</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.bsgun.cn/posts/9642fffa/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/Hexo-static/img/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Hexo 搭建静态博客</div>            <div class="tag-link-sitename">梦爱吃鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.bsgun.cn/posts/37e1f95c/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/Hexo-static/img/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Hexo 部署到服务器</div>            <div class="tag-link-sitename">梦爱吃鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong>如果你需要购买服务器并安装宝塔面板，可以看下这个文章</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.bsgun.cn/posts/5c8fac61/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/Hexo-static/img/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">购买服务器并安装宝塔</div>            <div class="tag-link-sitename">梦爱吃鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="二、Vercel是什么"><a href="#二、Vercel是什么" class="headerlink" title="二、Vercel是什么"></a>二、Vercel是什么</h2><h3 id="1-关于vercel"><a href="#1-关于vercel" class="headerlink" title="1.关于vercel"></a>1.关于vercel</h3><p>Vercel 是一个云服务平台，支持静态网站和动态网站的应用部署、预览和上线。如果你用过 GitHub Pages ，那么心里可能不会太陌生，但你也能通过 vercel 集成 GitHub 后，在 GitHub 项目进行代码推送，PR合并自动部署的目的，且你不需要考虑服务器问题。</p><h3 id="2-Vercel-优势"><a href="#2-Vercel-优势" class="headerlink" title="2.Vercel 优势"></a>2.Vercel 优势</h3><blockquote><p>随便说几条，还有很多</p></blockquote><ol><li>个人版永久免费，每个月 100G 流量（别人访问你的项目所耗费的流量），个人项目部署完全够用</li><li>因为内置构建流程，支持代码推送、PR 自动触发构建，不同分支唯一地址，方便测试。</li><li>支持本地、测试、生产三种环境部署，仅仅是命令区别，上手成本极低。</li><li>相比于GitHub Pages，国内访问Vercel的速度更快（要绑定自己的域名）</li></ol><h3 id="3-Hexo部署方式"><a href="#3-Hexo部署方式" class="headerlink" title="3.Hexo部署方式"></a>3.Hexo部署方式</h3><blockquote><p>下面讲述两种部署方式</p></blockquote><ol><li>直接导入hexo项目文件，vercel 会自动检测并为项目所用的框架设置最佳构建配置和部署配置</li><li>直接部署hexo生成的静态文件，部署速度较快，直接使用GitHub Pages的仓库文件就行</li></ol><blockquote><p>下面将使用第二种部署方式进行</p></blockquote><h2 id="三、注册Vercel和部署"><a href="#三、注册Vercel和部署" class="headerlink" title="三、注册Vercel和部署"></a>三、注册Vercel和部署</h2><h3 id="注册"><a href="#注册" class="headerlink" title="注册"></a>注册</h3><p>注册的方式很简单，如果你有Github账号，那将会非常方便</p><p><a href="https://vercel.com/signup">注册 – Vercel</a></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0a228527f.webp"></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0a47e1ecb.webp"></p><p>跟着图片走，在弹出的窗口中点击继续</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0a7475fc6.webp"></p><p>至此我们已经注册完毕</p><h3 id="部署"><a href="#部署" class="headerlink" title="部署"></a>部署</h3><p>我们创建一个新项目</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0b03873cd.webp"></p><p>选择我们之前的GitHub Pages仓库</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0afb4258d.webp"></p><p>配置你的项目名字（不可以大写和另类符号），直接部署</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0b6a8ae0a.webp"></p><h3 id="添加域名"><a href="#添加域名" class="headerlink" title="添加域名"></a>添加域名</h3><blockquote><p>vercle的域名国内被墙了，所以我们需要添加自己的域名</p></blockquote><p>我们可以在首页找到我们刚刚创建的项目，点击右上角三个点，点击<code>settings</code></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0bfec346f.webp"></p><p>添加域名前我们先去解析一下(😂) 主机记录 <code>www</code>  记录类型 <code>CNAME</code>记录值推荐填写 <code> cname-china.vercel-dns.com.</code></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0ca790904.webp"></p><p>回到vercel 我们在<code>settings</code>中点击<code>Domains</code>，并添加我们的域名 （vercle的域名国内被墙了）</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0c400d898.webp"></p><p>这个我不解释了，我不需要重定向我就直接添加了</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0d823650a.webp"></p><p>添加完后会自动配置SSL证书，我们就等待就好了</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0e264b52e.webp"></p><p>完成后直接打开就可以访问了</p><h3 id="速度对比"><a href="#速度对比" class="headerlink" title="速度对比"></a>速度对比</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0f8eab54c.webp" alt="Vercel"></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f0faeac8ac.webp" alt="Github Pages"></p><blockquote><p>这个速度还是不够好，因为我有备案，所以我们国内可以解析到自己的服务器上</p></blockquote><h2 id="四、分线路解析"><a href="#四、分线路解析" class="headerlink" title="四、分线路解析"></a>四、分线路解析</h2><h3 id="添加解析"><a href="#添加解析" class="headerlink" title="添加解析"></a>添加解析</h3><p>这个需要看我们的DNS域名商支持不支持，不支持就转到<a href="https://www.dnspod.cn/">DNSPOD</a>或者我用的<a href="https://www.yundun.com/">云盾</a>都可以</p><p>以云盾为演示找到我们的域名解析控制台</p><p>直接添加一条 A 解析 主机记录<code>www</code>记录值<code>服务器ip</code>，线路类型选择<code>中国大陆</code></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f122aafd4c.webp"></p><p>解析完后我们接着去看看速度，可以看到IP多了一条，速度也是非常快了，基本全绿了</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1269bd9ae.webp"></p><h2 id="五、部署CDN保护源站"><a href="#五、部署CDN保护源站" class="headerlink" title="五、部署CDN保护源站"></a>五、部署CDN保护源站</h2><p>我们也可以给我们的服务器套上CDN防护，避免被人打我们的服务器IP，还能隐藏源站</p><p>推荐一下兄弟站的自建CDN  （公益项目，免费也能用）</p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://koxiuqiu.cn/2024/04/06/qiudn">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/2024/06/27/666f14be62f36.webp)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">为博客站点提供免费CDN</div>            <div class="tag-link-sitename">KLCDM</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="六、结束"><a href="#六、结束" class="headerlink" title="六、结束"></a>六、结束</h2><blockquote><p>以上内容仅记录所用，不保证后续还能打开</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;一、前提准备&quot;&gt;&lt;a href=&quot;#一、前提准备&quot; class=&quot;headerlink&quot; title=&quot;一、前提准备&quot;&gt;&lt;/a&gt;一、前提准备&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;阅读此文章之前，你可能需要首先阅读以下的文章才能更好的理解上下文。&lt;/strong&gt;&lt;/p&gt;</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/hexo/"/>
    
    <category term="雨云服务器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E9%9B%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="vercel" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/vercel/"/>
    
  </entry>
  
  <entry>
    <title>Umami？不，还是51LA</title>
    <link href="https://blog.bsgun.cn/posts/609bcdb9/"/>
    <id>https://blog.bsgun.cn/posts/609bcdb9/</id>
    <published>2024-07-24T18:11:59.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<p>昨天，51LA遭遇了DDoS攻击，导致昨天的数据全部丢失。对于一个数据一般般但还每天关注数据的人来说，这无疑接受不了。</p><p><img src="https://oss-cdn.bsgun.cn/2024/07/27/868406.webp" alt="51LA"></p><p>在寻找替代方案时，偶然发现了张洪大佬自建的Umami。Umami是一个开源的网站分析工具，界面简洁，功能全面。</p><p>通过搜索，找到了一个在Vercel上部署Umami的方法。作为一个喜欢白嫖的人，自然选择了Vercel。</p><p><strong>Vercel YYDS</strong> <img no-lazy class="inline" src="https://oss-cdn.bsgun.cn/2024/07/27/928398.webp" style="height:70px;"/></p><p>按照教程，成功将Umami部署到了Vercel上。</p><p><img src="https://oss-cdn.bsgun.cn/2024/07/27/828311.webp"></p><p>Umami的界面确实简洁美观，数据是我本地测试的。</p><p>虽然成功部署了Umami，根据张洪大佬的api也是成功在我国内服务器部署上了，那么问题来了国内服务器请求Vercel部署的Umami时，速度非常慢</p><p><strong>你品</strong><img no-lazy class="inline" src="https://oss-cdn.bsgun.cn/2024/07/27/956166.webp" style="height:70px;"/></p><p>最后考虑到服务器的速度问题和稳定性，最终决定回归51LA。毕竟，作为大厂的第三方服务，51LA的稳定性应该比自己瞎折腾强。</p><p>虽然这次尝试转Umami，但还是以回归51LA告终，不过整个过程还是值得记录和分享的。整理一下文章，也算是对自己这次折腾的一个总结</p><p>在 <strong>themes&#x2F;anzhiyu&#x2F;layout&#x2F;includes&#x2F;head.pug</strong> 添加</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">//- Umami</span><br><span class="line">if theme.Umami</span><br><span class="line">  if theme.Umami.umami_url</span><br><span class="line">    script(async defer src=`$&#123;theme.Umami.umami_url_js&#125;` data-website-id=`$&#123;theme.Umami.umami_id&#125;` data-host-url=`$&#123;theme.Umami.umami_url&#125;`)</span><br><span class="line">  else</span><br><span class="line">    script(async defer src=`$&#123;theme.Umami.umami_url_js&#125;` data-website-id=`$&#123;theme.Umami.umami_id&#125;`)</span><br></pre></td></tr></table></figure><p>然后修改 <strong>themes&#x2F;anzhiyu&#x2F;source&#x2F;css&#x2F;_page&#x2F;about.styl</strong></p><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">大致在<span class="number">1255</span>行</span><br><span class="line">- <span class="keyword">if</span> (<span class="built_in">hexo-config</span>(<span class="string">&#x27;LA.enable&#x27;</span>)) &#123;</span><br><span class="line">+ <span class="keyword">if</span> (<span class="built_in">hexo-config</span>(<span class="string">&#x27;LA.enable&#x27;</span>) || <span class="built_in">hexo-config</span>(<span class="string">&#x27;Umami.enable&#x27;</span>)) &#123;</span><br></pre></td></tr></table></figure><p>接着修改 <strong>themes&#x2F;anzhiyu&#x2F;layout&#x2F;includes&#x2F;page&#x2F;about.pug</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">//-  应该是91行</span><br><span class="line">       .author-content</span><br><span class="line">-        if theme.LA.enable</span><br><span class="line">+        if theme.LA.enable || theme.Umami.enable</span><br><span class="line">           - let cover = item.statistic.cover</span><br><span class="line">           .about-statistic.author-content-item(style=`background: url($&#123;cover&#125;) top / cover no-repeat;`)</span><br><span class="line">             .card-content</span><br><span class="line">               .author-content-item-tips 数据</span><br><span class="line">               span.author-content-item-title 访问统计</span><br><span class="line">               #statistic</span><br><span class="line">-              .post-tips</span><br><span class="line">-                | 统计信息来自</span><br><span class="line">-                a(href=&#x27;https://invite.51.la/1NzKqTeb?target=V6&#x27;, target=&#x27;_blank&#x27;, rel=&#x27;noopener nofollow&#x27;) 51la网站统计</span><br><span class="line">+              if theme.LA.enable</span><br><span class="line">+                .post-tips</span><br><span class="line">+                  | 统计信息来自</span><br><span class="line">+                  a(href=&#x27;https://www.51.la/&#x27;, target=&#x27;_blank&#x27;, rel=&#x27;noopener nofollow&#x27;) 51LA统计</span><br><span class="line">+              else if theme.Umami.enable</span><br><span class="line">+                .post-tips</span><br><span class="line">+                  | 统计信息来自</span><br><span class="line">+                  a(href=&#x27;https://um.ruom.top&#x27;, target=&#x27;_blank&#x27;, rel=&#x27;noopener nofollow&#x27;) Umami统计</span><br><span class="line">               .banner-button-group</span><br><span class="line">                 - let link = item.statistic.link</span><br><span class="line">                 - let text = item.statistic.text</span><br></pre></td></tr></table></figure><p>继续修改 直接搜  <code>- const ck = theme.LA.ck</code> 把下面的全部替换</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br></pre></td><td class="code"><pre><span class="line">//- Umami 统计</span><br><span class="line">if theme.Umami &amp;&amp; theme.Umami.enable</span><br><span class="line">  script(defer).</span><br><span class="line">    (function() &#123;</span><br><span class="line">      const umamiApiUrl = &quot;#&#123;url_for(theme.Umami.umami_api)&#125;&quot;;</span><br><span class="line">      fetch(umamiApiUrl)</span><br><span class="line">        .then(res =&gt; res.json())</span><br><span class="line">        .then(data =&gt; &#123;</span><br><span class="line">          let title = &#123;</span><br><span class="line">            &quot;today_uv&quot;: &quot;今日人数&quot;,</span><br><span class="line">            &quot;today_pv&quot;: &quot;今日访问&quot;,</span><br><span class="line">            &quot;yesterday_uv&quot;: &quot;昨日人数&quot;,</span><br><span class="line">            &quot;yesterday_pv&quot;: &quot;昨日访问&quot;,</span><br><span class="line">            &quot;last_month_pv&quot;: &quot;本月访问&quot;,</span><br><span class="line">            &quot;last_year_pv&quot;: &quot;本年访问&quot;</span><br><span class="line">          &#125;;</span><br><span class="line">          let s = document.getElementById(&quot;statistic&quot;);</span><br><span class="line">          for (let key in data) &#123;</span><br><span class="line">            if (data.hasOwnProperty(key) &amp;&amp; title[key]) &#123;</span><br><span class="line">              s.innerHTML += `&lt;div&gt;&lt;span&gt;$&#123;title[key]&#125;&lt;/span&gt;&lt;span id=&quot;$&#123;key&#125;&quot;&gt;$&#123;data[key]&#125;&lt;/span&gt;&lt;/div&gt;`;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">        .catch(error =&gt; console.error(&#x27;Error:&#x27;, error));</span><br><span class="line">    &#125;)();</span><br><span class="line">else</span><br><span class="line">  script(defer).</span><br><span class="line">    function initAboutPage() &#123;</span><br><span class="line">      fetch(&quot;https://v6-widget.51.la/v6/#&#123;ck&#125;/quote.js&quot;)</span><br><span class="line">        .then(res =&gt; res.text())</span><br><span class="line">        .then(data =&gt; &#123;</span><br><span class="line">          let title = [&quot;最近活跃&quot;, &quot;今日人数&quot;, &quot;今日访问&quot;, &quot;昨日人数&quot;, &quot;昨日访问&quot;, &quot;本月访问&quot;, &quot;总访问量&quot;];</span><br><span class="line">          let num = data.match(/(&lt;\/span&gt;&lt;span&gt;).*?(\/span&gt;&lt;\/p&gt;)/g);</span><br><span class="line"></span><br><span class="line">          num = num.map(el =&gt; &#123;</span><br><span class="line">            let val = el.replace(/(&lt;\/span&gt;&lt;span&gt;)/g, &quot;&quot;);</span><br><span class="line">            let str = val.replace(/(&lt;\/span&gt;&lt;\/p&gt;)/g, &quot;&quot;);</span><br><span class="line">            return str;</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          let statisticEl = document.getElementById(&quot;statistic&quot;);</span><br><span class="line"></span><br><span class="line">          // 自定义不显示哪个或者显示哪个，如下为不显示 最近活跃访客 和 总访问量</span><br><span class="line">          let statistic = [];</span><br><span class="line">          for (let i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">            if (!statisticEl) return;</span><br><span class="line">            if (i == 0) continue;</span><br><span class="line">            statisticEl.innerHTML +=</span><br><span class="line">              &quot;&lt;div&gt;&lt;span&gt;&quot; + title[i] + &quot;&lt;/span&gt;&lt;span id=&quot; + title[i] + &quot;&gt;&quot; + num[i] + &quot;&lt;/span&gt;&lt;/div&gt;&quot;;</span><br><span class="line">            queueMicrotask(() =&gt; &#123;</span><br><span class="line">              statistic.push(</span><br><span class="line">                new CountUp(title[i], 0, num[i], 0, 2, &#123;</span><br><span class="line">                  useEasing: true,</span><br><span class="line">                  useGrouping: true,</span><br><span class="line">                  separator: &quot;,&quot;,</span><br><span class="line">                  decimal: &quot;.&quot;,</span><br><span class="line">                  prefix: &quot;&quot;,</span><br><span class="line">                  suffix: &quot;&quot;,</span><br><span class="line">                &#125;)</span><br><span class="line">              );</span><br><span class="line">            &#125;);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          let statisticElement = document.querySelector(&quot;.about-statistic.author-content-item&quot;);</span><br><span class="line">          function statisticUP() &#123;</span><br><span class="line">            if (!statisticElement) return;</span><br><span class="line"></span><br><span class="line">            const callback = (entries, observer) =&gt; &#123;</span><br><span class="line">              entries.forEach(entry =&gt; &#123;</span><br><span class="line">                if (entry.isIntersecting) &#123;</span><br><span class="line">                  for (let i = 0; i &lt; num.length; i++) &#123;</span><br><span class="line">                    if (i == 0) continue;</span><br><span class="line">                    queueMicrotask(() =&gt; &#123;</span><br><span class="line">                      statistic[i - 1].start();</span><br><span class="line">                    &#125;);</span><br><span class="line">                  &#125;</span><br><span class="line">                  observer.disconnect(); // 停止观察元素，因为不再需要触发此回调</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            const options = &#123;</span><br><span class="line">              root: null,</span><br><span class="line">              rootMargin: &quot;0px&quot;,</span><br><span class="line">              threshold: 0</span><br><span class="line">            &#125;;</span><br><span class="line">            const observer = new IntersectionObserver(callback, options);</span><br><span class="line">            observer.observe(statisticElement);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          const selfInfoContentYear = new CountUp(&quot;selfInfo-content-year&quot;, 0, #&#123;selfInfoContentYear&#125;, 0, 2, &#123;</span><br><span class="line">            useEasing: true,</span><br><span class="line">            useGrouping: false,</span><br><span class="line">            separator: &quot;,&quot;,</span><br><span class="line">            decimal: &quot;.&quot;,</span><br><span class="line">            prefix: &quot;&quot;,</span><br><span class="line">            suffix: &quot;&quot;,</span><br><span class="line">          &#125;);</span><br><span class="line"></span><br><span class="line">          let selfInfoContentYearElement = document.querySelector(&quot;.author-content-item.selfInfo.single&quot;);</span><br><span class="line">          function selfInfoContentYearUp() &#123;</span><br><span class="line">            if (!selfInfoContentYearElement) return;</span><br><span class="line"></span><br><span class="line">            const callback = (entries, observer) =&gt; &#123;</span><br><span class="line">              entries.forEach(entry =&gt; &#123;</span><br><span class="line">                if (entry.isIntersecting) &#123;</span><br><span class="line">                  selfInfoContentYear.start();</span><br><span class="line">                  observer.disconnect(); // 停止观察元素，因为不再需要触发此回调</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            const options = &#123;</span><br><span class="line">              root: null,</span><br><span class="line">              rootMargin: &quot;0px&quot;,</span><br><span class="line">              threshold: 0</span><br><span class="line">            &#125;;</span><br><span class="line">            const observer = new IntersectionObserver(callback, options);</span><br><span class="line">            observer.observe(selfInfoContentYearElement);</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          selfInfoContentYearUp();</span><br><span class="line">          statisticUP()</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">      var pursuitInterval = null;</span><br><span class="line">      pursuitInterval = setInterval(function () &#123;</span><br><span class="line">        const show = document.querySelector(&quot;span[data-show]&quot;);</span><br><span class="line">        const next = show.nextElementSibling || document.querySelector(&quot;.first-tips&quot;);</span><br><span class="line">        const up = document.querySelector(&quot;span[data-up]&quot;);</span><br><span class="line"></span><br><span class="line">        if (up) &#123;</span><br><span class="line">          up.removeAttribute(&quot;data-up&quot;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        show.removeAttribute(&quot;data-show&quot;);</span><br><span class="line">        show.setAttribute(&quot;data-up&quot;, &quot;&quot;);</span><br><span class="line"></span><br><span class="line">        next.setAttribute(&quot;data-show&quot;, &quot;&quot;);</span><br><span class="line">      &#125;, 2000);</span><br><span class="line"></span><br><span class="line">      document.addEventListener(&quot;pjax:send&quot;, function () &#123;</span><br><span class="line">        pursuitInterval &amp;&amp; clearInterval(pursuitInterval);</span><br><span class="line">      &#125;);</span><br><span class="line"></span><br><span class="line">      var helloAboutEl = document.querySelector(&quot;.hello-about&quot;);</span><br><span class="line">      helloAboutEl.addEventListener(&quot;mousemove&quot;, evt =&gt; &#123;</span><br><span class="line">        const mouseX = evt.offsetX;</span><br><span class="line">        const mouseY = evt.offsetY;</span><br><span class="line">        gsap.set(&quot;.cursor&quot;, &#123;</span><br><span class="line">          x: mouseX,</span><br><span class="line">          y: mouseY,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        gsap.to(&quot;.shape&quot;, &#123;</span><br><span class="line">          x: mouseX,</span><br><span class="line">          y: mouseY,</span><br><span class="line">          stagger: -0.1,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    if (typeof gsap === &quot;object&quot;) &#123;</span><br><span class="line">      initAboutPage()</span><br><span class="line">    &#125; else &#123;</span><br><span class="line">      getScript(&quot;!&#123;url_for(theme.asset.gsap_js)&#125;&quot;).then(initAboutPage);</span><br><span class="line">    &#125;</span><br></pre></td></tr></table></figure><p>最后在主题的<strong>config.yml</strong>配置项内添加</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Umami</span></span><br><span class="line"><span class="attr">Umami:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span> <span class="comment"># 开关</span></span><br><span class="line">  <span class="attr">umami_url_js:</span> <span class="string">https://um.ruom.top/script.js</span> <span class="comment"># 填写 umami js地址 可以使用第三方CDN加速但需要配置下面的 umami_url</span></span><br><span class="line">  <span class="attr">umami_id:</span> <span class="string">c19add88-59e1-4fa1-a406-09e64d2845f3</span> <span class="comment"># 填写 umami 统计 ID</span></span><br><span class="line">  <span class="attr">umami_api:</span> <span class="string">https://img.ruom.top/umami/</span> <span class="comment"># 填写 umami API 地址</span></span><br><span class="line">  <span class="attr">umami_url:</span> <span class="comment"># https://um.ruom.top 填写 umami 服务器地址 使用 CDN 加速 Umami 静态资源后需配置此项</span></span><br></pre></td></tr></table></figure>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;昨天，51LA遭遇了DDoS攻击，导致昨天的数据全部丢失。对于一个数据一般般但还每天关注数据的人来说，这无疑接受不了。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;https://oss-cdn.bsgun.cn/2024/07/27/868406.webp&quot; alt=&quot;51LA&quot;&gt;</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    <category term="折腾" scheme="https://blog.bsgun.cn/categories/%E6%8A%98%E8%85%BE/"/>
    
    
    <category term="Umami" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/Umami/"/>
    
    <category term="51LA" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/51LA/"/>
    
  </entry>
  
  <entry>
    <title>Hexo部署到服务器</title>
    <link href="https://blog.bsgun.cn/posts/37e1f95c/"/>
    <id>https://blog.bsgun.cn/posts/37e1f95c/</id>
    <published>2024-06-16T20:51:06.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<p><strong>本来Hexo是部署在GitHub上的，无奈访问太慢了，并且有些地区打不开，我这个强迫症就忍不了这种情况。就有了以下开端</strong></p><h2 id="一、前提准备"><a href="#一、前提准备" class="headerlink" title="一、前提准备"></a>一、前提准备</h2><p><strong>阅读此文章之前，你可能需要首先阅读以下的文章才能更好的理解上下文。</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.bsgun.cn/posts/9642fffa/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/Hexo-static/img/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">Hexo 搭建静态博客</div>            <div class="tag-link-sitename">梦爱吃鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><p><strong>如果你需要购买服务器并安装宝塔面板，可以看下这个文章</strong></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://blog.bsgun.cn/posts/5c8fac61/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://oss-cdn.bsgun.cn/Hexo-static/img/favicon.ico)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">购买服务器并安装宝塔</div>            <div class="tag-link-sitename">梦爱吃鱼</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="添加站点"><a href="#添加站点" class="headerlink" title="添加站点"></a>添加站点</h3><p>在宝塔面板-&gt;网站-&gt;添加站点，填写域名，版本设置纯静态。记住网站资源目录 <code>/www/wwwroot/ruom.top</code></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666efb440b121.webp"></p><h2 id="二、Git仓库搭建"><a href="#二、Git仓库搭建" class="headerlink" title="二、Git仓库搭建"></a>二、Git仓库搭建</h2><p>之前推hexo的静态文件都是推到GitHub的仓库，现在服务器也是一样，需要仓库来保存</p><p><strong>下面操作需要有Linux基础知识驱动</strong></p><h3 id="1-添加一个用户git"><a href="#1-添加一个用户git" class="headerlink" title="1.添加一个用户git"></a>1.添加一个用户git</h3><p>在服务器端</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">adduser git   <span class="comment">#添加git用户</span></span><br><span class="line"><span class="built_in">chmod</span> 740 /etc/sudoers  <span class="comment">#改变sudoers文件的权限为文件所有者可写</span></span><br><span class="line">vim /etc/sudoers</span><br><span class="line"><span class="comment">#在root ALL=(ALL) ALL 下方添加一行</span></span><br><span class="line">git ALL=(ALL) ALL</span><br><span class="line"><span class="built_in">chmod</span> 400 /etc/sudoers  <span class="comment">#将其权限修改为文件所有者可读</span></span><br></pre></td></tr></table></figure><h3 id="2-给git用户添加ssh密钥"><a href="#2-给git用户添加ssh密钥" class="headerlink" title="2.给git用户添加ssh密钥"></a>2.给git用户添加ssh密钥</h3><p>这一步是为了建立主机与服务器连接，使其不需要密码也能登陆</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地打开powershell 生成密匙 如已有密匙可跳过这一步 部署过hexo的应该都有</span></span><br><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;ruom.top&quot;</span></span><br><span class="line"><span class="comment"># -t 指定密钥类型，默认是 rsa ，可以省略</span></span><br><span class="line"><span class="comment"># -C 用于识别这个密钥的注释，可以输入任何内容</span></span><br><span class="line"><span class="comment"># -f 指定密钥文件存储文件名，默认id_rsa</span></span><br><span class="line"><span class="comment">## 这个生成的文件在 C:\Users\用户名\.ssh</span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f02525bba3.webp"></p><p>复制公匙id_rsa.pub内容到服务器&#x2F;home&#x2F;git&#x2F;.ssh&#x2F;authorized_keys，关闭终端</p><p>使用<code>ssh git@server</code>重新登录服务器，测试是否能不要密码登录到git用户，如出现Permission denied的问题可查看服务端是否开启ssh的密钥登录</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在服务器端</span></span><br><span class="line">su git  <span class="comment">#切换到git用户</span></span><br><span class="line"><span class="built_in">mkdir</span> -p ~/.ssh</span><br><span class="line"><span class="built_in">touch</span> ~/.ssh/authorized_keys <span class="comment">#创建authorized_keys文件</span></span><br><span class="line"><span class="built_in">chmod</span> 600 ~/.ssh/authorized_keys  <span class="comment">#为authorized_keys文件赋予文件所有者可读可写的权限</span></span><br><span class="line"><span class="built_in">chmod</span> 700 ~/.ssh  <span class="comment">#为.ssh文件夹赋予文件夹所有者可读可写可执行的权限</span></span><br></pre></td></tr></table></figure><h3 id="3-创建Git仓库"><a href="#3-创建Git仓库" class="headerlink" title="3.创建Git仓库"></a>3.创建Git仓库</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">mkdir</span> /home/git/repos    <span class="comment">#新建目录，这是git仓库的位置</span></span><br><span class="line"><span class="built_in">cd</span> /home/git/repos</span><br><span class="line">git init --bare blog.git <span class="comment">#初始化一个名叫blog的仓库</span></span><br></pre></td></tr></table></figure><h3 id="4-配置钩子实现自动部署"><a href="#4-配置钩子实现自动部署" class="headerlink" title="4.配置钩子实现自动部署"></a>4.配置钩子实现自动部署</h3><p>找到 <code>/home/git/repos/blog.git/hooks/post-update.sample</code> 改名<code>post-update</code>，内容改为</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#!/bin/sh</span></span><br><span class="line">git --work-tree=/www/wwwroot/ruom.top --git-dir=/home/git/repos/blog.git checkout -f</span><br></pre></td></tr></table></figure><p>然后给权限</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cd</span> blog.git/hooks/</span><br><span class="line"><span class="built_in">chmod</span> +x post-update  <span class="comment">#赋予其可执行权限</span></span><br><span class="line"><span class="built_in">chown</span> -R git:git /home/git/repos/ <span class="comment">#仓库所有者改为git</span></span><br><span class="line"><span class="built_in">chown</span> -R git:git /www/wwwroot/ruom.top/ <span class="comment">#站点文件夹所有者改为git</span></span><br></pre></td></tr></table></figure><h3 id="5-测试Git仓库是否可用"><a href="#5-测试Git仓库是否可用" class="headerlink" title="5.测试Git仓库是否可用"></a>5.测试Git仓库是否可用</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#在本地端，如果能将仓库拉下来，说明Git仓库搭建成功</span></span><br><span class="line">git <span class="built_in">clone</span> git@server_ip:/home/git/repos/blog.git</span><br></pre></td></tr></table></figure><h2 id="三、配置和测试"><a href="#三、配置和测试" class="headerlink" title="三、配置和测试"></a>三、配置和测试</h2><h3 id="1-配置"><a href="#1-配置" class="headerlink" title="1.配置"></a>1.配置</h3><p>修改本地Hexo博客文件夹中的<code>_config.yml</code>文件</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">deploy:</span></span><br><span class="line">  <span class="attr">type:</span> <span class="string">git</span></span><br><span class="line">  <span class="attr">repo:</span> <span class="string">git@server_ip:/home/git/repos/blog.git</span></span><br><span class="line">  <span class="attr">branch:</span> <span class="string">master</span></span><br></pre></td></tr></table></figure><h3 id="2-测试"><a href="#2-测试" class="headerlink" title="2.测试"></a>2.测试</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo clean  <span class="comment">#清除缓存</span></span><br><span class="line">hexo generate <span class="comment">#生成静态页面</span></span><br><span class="line">hexo delopy  <span class="comment">#将本地静态页面目录部署到云服务器</span></span><br></pre></td></tr></table></figure><p>也可以在package.json 中添加 npm 脚本，这样就可以直接<code>npm run d</code>一下执行</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">&quot;scripts&quot;:</span> &#123;</span><br><span class="line">    <span class="attr">&quot;build&quot;:</span> <span class="string">&quot;hexo generate&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;clean&quot;:</span> <span class="string">&quot;hexo clean&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;deploy&quot;:</span> <span class="string">&quot;hexo deploy&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;server&quot;:</span> <span class="string">&quot;hexo server&quot;</span>,</span><br><span class="line">    <span class="attr">&quot;d&quot;:</span> <span class="string">&quot;hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy&quot;</span></span><br><span class="line">  &#125;<span class="string">,</span></span><br></pre></td></tr></table></figure><p>然后访问刚开始绑定的网站域名看看是否成功 （记得解析哦）</p><blockquote><p>以上内容仅记录所用，不保证后续还能打开</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;&lt;strong&gt;本来Hexo是部署在GitHub上的，无奈访问太慢了，并且有些地区打不开，我这个强迫症就忍不了这种情况。就有了以下开端&lt;/strong&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、前提准备&quot;&gt;&lt;a href=&quot;#一、前提准备&quot; class=&quot;headerlink&quot; tit</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/hexo/"/>
    
    <category term="宝塔" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="雨云服务器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E9%9B%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Hexo搭建静态博客</title>
    <link href="https://blog.bsgun.cn/posts/9642fffa/"/>
    <id>https://blog.bsgun.cn/posts/9642fffa/</id>
    <published>2024-06-16T20:31:16.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="1-什么是Hexo和静态博客"><a href="#1-什么是Hexo和静态博客" class="headerlink" title="1.什么是Hexo和静态博客"></a>1.什么是Hexo和静态博客</h2><p><a href="https://hexo.io/">Hexo</a> 是一个极速、简单且强大的静态博客架构。它使用 Node.js 作为构建引擎，上百个文件在几秒钟内便可构建完成；而且拥有着丰富的插件库，因开源而显得生机勃勃，可扩展性很好；最重要的，它支持 <a href="http://kchen.cc/2015/10/05/Markdown-Manual/#Markdown-%E7%AE%80%E6%98%8E%E8%AF%AD%E6%B3%95">Markdown</a> 作为书写语言，极大地方便了博客的撰写。</p><p>静态博客：是指<strong>没有后端数据库</strong>的博客，所有文章都是以<strong>文件</strong>的形式存储，是一种<strong>纯前端</strong>的博客框架。</p><h2 id="2-配置环境"><a href="#2-配置环境" class="headerlink" title="2.配置环境"></a>2.配置环境</h2><p>安装Node.js和Git</p><ul><li><a href="https://nodejs.org/zh-cn/">Node.js</a></li><li><a href="https://git-scm.com/">Git</a></li></ul><p>查看是否安装成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">node -v</span><br><span class="line">npm -v</span><br><span class="line">git -version</span><br></pre></td></tr></table></figure><p>环境没问题后安装Node.js 淘宝镜像加速器 （cnpm）</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">npm install -g cnpm --registry=https://registry.npm.taobao.org</span><br><span class="line">cnpm -v        #检查是否安装成功</span><br></pre></td></tr></table></figure><h2 id="3-安装Hexo"><a href="#3-安装Hexo" class="headerlink" title="3.安装Hexo"></a>3.安装Hexo</h2><p>环境配置好后就可以安装Hexo了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">cnpm install -g hexo-cli</span><br><span class="line">hexo -v        #查看是否安装成功</span><br></pre></td></tr></table></figure><p>安装完成后，创建到一个想用来存放博客的目录<code>hexo</code>，然后开始新建博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">cd hexo</span><br><span class="line">hexo init</span><br><span class="line">hexo s</span><br></pre></td></tr></table></figure><p>在运行<code>hexo s</code>后会看到<code>Hexo is running at http://localhost:4000 . Press Ctrl+C to stop.</code></p><p>在浏览器里打开<a href="http://localhost:4000/">http://localhost:4000</a> 就可看到一个新建的Hexo博客</p><h2 id="4-写博客文章"><a href="#4-写博客文章" class="headerlink" title="4.写博客文章"></a>4.写博客文章</h2><p>在博客目录下来新建一个博客</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new &quot;博客文章名&quot;</span><br></pre></td></tr></table></figure><p>新建的博客会被保存到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;blog-dir&gt;/source/_posts/博客文章名.md</span><br></pre></td></tr></table></figure><p>之后我们可以用编辑器打开编辑，保存后<code>hexo s</code>访问 <a href="http://localhost:4000/">http://localhost:4000</a> 就可以看到这篇文章已经发布到博客中了</p><h2 id="5-部署博客到GitHub"><a href="#5-部署博客到GitHub" class="headerlink" title="5.部署博客到GitHub"></a>5.部署博客到GitHub</h2><p>现在的页面我们只能在本地访问，这当然不够，由于Hexo 是基于静态页面的博客系统，意味着对服务器的要求可以非常的低，所以我们可以将其部署到Github上去</p><ul><li>首先创建一个名称为 <code>用户名.github.io</code> 的仓库来托管网页</li><li>然后到命令行安装git部署插件</li></ul><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">cnpm install --save hexo-deployer-git     #在blog目录下安装git部署插件</span><br></pre></td></tr></table></figure><ul><li><p>在hexoblog目录下找到_config.yml，用编辑器打开，在最下面找到</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">deploy:</span><br><span class="line">type: &#x27;&#x27;</span><br><span class="line"></span><br><span class="line"> #将其设置为如下，注意每个冒号后面有一个空格</span><br><span class="line"></span><br><span class="line">deploy:</span><br><span class="line">type: git</span><br><span class="line">repo: https://github.com/JLinmr/JLinmr.github.io.git        #你的GitHub仓库地址</span><br><span class="line">branch: main</span><br></pre></td></tr></table></figure></li><li><p>命令行运行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">hexo g        #生成静态文件</span><br><span class="line">hexo d        #部署到GitHub</span><br></pre></td></tr></table></figure></li><li><p>刷新GitHub仓库可以看到生成了很多文件，此时访问<code>用户名.github.io</code>即可看到创建的博客</p></li></ul><h2 id="6-绑定域名"><a href="#6-绑定域名" class="headerlink" title="6.绑定域名"></a>6.绑定域名</h2><p>如果我们有自己的域名，想要解析到我们 刚刚创建的网站，需要添加记录</p><p>CNAME 类型 解析到你的<code>用户名.github.io</code>  主机记录@ （看个人需求）</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ef5fd977b9.webp"></p><p>在你的博客文件\source中新建CNAME记事本，不要有后缀，内容输入域名即可</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ef5a96cef1.webp"></p><p>然后重新</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">hexo c        #清理静态文件</span><br><span class="line">hexo g        #生成静态文件</span><br><span class="line">hexo d        #部署到GitHub</span><br></pre></td></tr></table></figure><p>进入github博客仓库，在setting-&gt;options的最下面的github pages中输入自己域名并保存</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ef561b67ce.webp"></p><p>现在就可以用自己的域名访问刚刚建立的网站了</p><h2 id="7-结束"><a href="#7-结束" class="headerlink" title="7.结束"></a>7.结束</h2><blockquote><p>以上内容仅记录所用，不保证后续还能打开</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;1-什么是Hexo和静态博客&quot;&gt;&lt;a href=&quot;#1-什么是Hexo和静态博客&quot; class=&quot;headerlink&quot; title=&quot;1.什么是Hexo和静态博客&quot;&gt;&lt;/a&gt;1.什么是Hexo和静态博客&lt;/h2&gt;&lt;p&gt;&lt;a href=&quot;https://hexo.</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="hexo" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/hexo/"/>
    
    <category term="博客" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%8D%9A%E5%AE%A2/"/>
    
  </entry>
  
  <entry>
    <title>购买服务器并安装宝塔</title>
    <link href="https://blog.bsgun.cn/posts/5c8fac61/"/>
    <id>https://blog.bsgun.cn/posts/5c8fac61/</id>
    <published>2024-06-16T19:49:13.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="购买服务器"><a href="#购买服务器" class="headerlink" title="购买服务器"></a>购买服务器</h2><p><strong>首先需要一台云服务器，要有公网IP的，推荐雨云的：</strong></p><p><strong>雨云优惠注册地址：<a href="https://www.rainyun.com/Lin_">https://www.rainyun.com/Lin_</a></strong></p><p><strong>优惠码：Lin</strong></p><p><strong>使用优惠码注册后绑定微信可获得5折优惠券</strong></p><p>注册完账号后进到雨云控制台，<strong>云服务器</strong>入口可以在后台的 <strong>总览</strong> 和 <strong>云产品</strong> 部分找到：</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed33613cbf.webp"></p><p>点击<strong>购买云服务器</strong>，接着选择服务器区域，国内用户有备案的建议选择内地机房，因为延迟低，比如宿迁和十堰，其中推荐十堰，因为 IP 便宜，如果预算充足选择宿迁更好。</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed4a04e607.webp"></p><p>配置地区按需求购买，没有备案的买国外的服务器就好了。</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed37e3cf5c.webp"></p><p>系统这里我推荐选择宝塔面板，简单易上手，后续也会用到它，而且已经为我们预装了LNMP，能为我们节省大量时间</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed439be66c.webp"></p><p>购买后即可在我的云服务器这里看到你买的云服务器，点击管理。</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed4eb89585.webp"></p><h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h2><p>下载安装并打开 <code>ssh</code> 客户端软件，<code>ssh</code> 客户端软件推荐 <code>putty</code> 或 <code>Xshell</code>。</p><p>我这里用 <code>Xshell</code>，在 SSH 客户端中输入你的服务器的 IP 地址（雨云控制台获取），还有 SSH 端口（一般默认是 22），然后点击连接。</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed692128d2.webp"></p><p>接受并保存（以后连接不再弹出）输入用户名<code>root</code> 输入密码，上方图片框选的内容就是，最后连接成功</p><div class="gallery">  <div class="fj-gallery page_img_lazyload lazyload btn_album_detail_lazyload data" data-rowHeight="220" data-limit="2">    <span class="gallery-data">[{"url":"https://oss-cdn.bsgun.cn/2024/06/27/666ed7c597ece.webp","alt":""},{"url":"https://oss-cdn.bsgun.cn/2024/06/27/666ed7791d8fc.webp","alt":""},{"url":"https://oss-cdn.bsgun.cn/2024/06/27/666ed7d311dcf.webp","alt":""}]</span>  </div><button class="gallery-load-more" style="opacity:0">  <span>加载更多</span>  <i class="anzhiyufont anzhiyu-icon-arrow-down"></i>  </button></div><p>输入<code>bt 14</code>命令 获取到我们的宝塔登录信息，因为不显示密码所以我们重置一下密码继续输入<code>bt 5</code></p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed959a7321.webp"></p><p>去浏览器打开外网地址，输入账号密码</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666ed99549141.webp"></p><p>需要注册个宝塔的账号，注册完登录即可</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666edcdd0a949.webp"></p><h2 id="其他服务器商"><a href="#其他服务器商" class="headerlink" title="其他服务器商"></a>其他服务器商</h2><p>当然我们也可以选择其他的服务器商</p><p>使用方法大同小异，选择合适的配置并安装宝塔面板，这是官网的安装脚本在下面的连接点击直达</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666edbdca01aa.webp"></p><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://www.bt.cn/new/download.html">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://www.bt.cn/static/new/images/logo.svg)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">宝塔面板下载，免费全能的服务器运维软件</div>            <div class="tag-link-sitename">宝塔</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h2 id="帮助"><a href="#帮助" class="headerlink" title="帮助"></a>帮助</h2><blockquote><p>有什么问题可以留言或者联系我提供帮助</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;购买服务器&quot;&gt;&lt;a href=&quot;#购买服务器&quot; class=&quot;headerlink&quot; title=&quot;购买服务器&quot;&gt;&lt;/a&gt;购买服务器&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;首先需要一台云服务器，要有公网IP的，推荐雨云的：&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="宝塔" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%AE%9D%E5%A1%94/"/>
    
    <category term="雨云服务器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E9%9B%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>雨云服务器搭建内网穿透服务器教程，NPS搭建和使用教程</title>
    <link href="https://blog.bsgun.cn/posts/37257/"/>
    <id>https://blog.bsgun.cn/posts/37257/</id>
    <published>2023-11-21T20:22:02.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<p>在这个高度互联的时代，我们越来越依赖互联网来实现工作和生活的各种需求。然而，随着一些省份逐步收回家庭用户的公网IPv4地址（目前国内大部分地方都是多个用户共用一个公网IPv4地址），我们无法直接通过公网访问家里的设备和服务，这给我们带来了一定的困扰。但是别担心，内网穿透技术就是解决这个问题的绝佳方案。</p><p>在本教程中，我们将介绍一款名为NPS的轻量级内网穿透工具，它不仅支持多平台，包括X86、ARM和MIPS，而且还提供了便捷的WEB管理界面，使得搭建和配置内网穿透服务器变得简单而直观。</p><h2 id="内网穿透简介"><a href="#内网穿透简介" class="headerlink" title="内网穿透简介"></a>内网穿透简介</h2><p>内网穿透是一种将内部网络的服务暴露到公网的技术，使得外部用户可以通过互联网访问内部网络中的服务。它允许在没有公网 IP 地址或端口转发的情况下，通过一个中间代理服务器将内部网络的服务暴露给外部用户。</p><p>内网穿透通常用于以下场景：</p><ol><li>远程访问：当内部网络中的设备需要被外部用户远程访问时，可以使用内网穿透技术。例如，通过内网穿透可以将家庭网络中的个人电脑、NAS（网络附加存储）等设备暴露给外部用户，实现远程访问和控制。</li><li>远程办公：在企业中，员工可能需要从外部网络访问内部网络中的办公应用、文件共享等资源。内网穿透可以提供一种安全的方式，让员工能够远程访问这些资源，实现远程办公。</li><li>数据备份和同步：内网穿透可以用于将内部网络中的文件、数据库等数据备份到外部云存储服务或同步到其他设备。这样即使内部网络出现故障，数据仍然可以从外部网络进行恢复和同步。</li><li>搭建网站和应用程序：内网穿透可以用于将内部网络中的网站、应用程序等服务暴露给外部用户。通过内网穿透，开发者可以在本地搭建并测试自己的网站或应用程序，而无需购买公网 IP 地址或使用其他复杂的端口转发设置。</li></ol><p>常见的内网穿透工具包括 ngrok、frp、nps 等。这些工具提供了简单易用的界面和配置选项，可以帮助用户快速搭建内网穿透环境。然而，需要注意的是，在使用内网穿透技术时，安全性是非常重要的考虑因素，应该采取适当的安全措施来保护内部网络的安全。</p><h2 id="NPS介绍"><a href="#NPS介绍" class="headerlink" title="NPS介绍"></a>NPS介绍</h2><p>nps是一款轻量级、高性能、功能强大的<strong>内网穿透</strong>代理服务器。目前支持<strong>TCP、UDP流量转发</strong>，可支持任何<strong>tcp、udp</strong>上层协议（访问内网网站、本地支付接口调试、ssh访问、远程桌面，内网dns解析、游戏私服、我的世界服务器 等等……），此外还<strong>支持内网http代理、内网socks5代理</strong>、<strong>p2p等</strong>，同时支持snappy压缩、站点保护、加密传输、多路复用、header修改等。支持web图形化管理，集成多用户模式。</p><p>案例：</p><ol><li>做微信公众号开发、小程序开发等—-&gt; 域名代理模式</li><li>想在外网通过ssh连接内网的机器，做云服务器到内网服务器端口的映射，—-&gt; tcp代理模式</li><li>在非内网环境下使用内网dns，或者需要通过udp访问内网机器等—-&gt; udp代理模式</li><li>在外网使用HTTP代理访问内网站点—-&gt; http代理模式</li><li>搭建一个内网穿透ss，在外网如同使用内网vpn一样访问内网资源或者设备—-&gt; socks5代理模式</li></ol><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://github.com/yisier/nps">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://gcore.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">NPS项目Github地址</div>            <div class="tag-link-sitename">Github</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><div calss='anzhiyu-tag-link'><a class="tag-Link" target="_blank" href="https://ehang-io.github.io/nps/#/">    <div class="tag-link-tips">引用站外地址</div>    <div class="tag-link-bottom">        <div class="tag-link-left" style="background-image: url(https://gcore.jsdelivr.net/gh/xaoxuu/cdn-assets@master/logo/256/safari.png)">          <i class="anzhiyufont anzhiyu-icon-link" style="display: none"></i>        </div>        <div class="tag-link-right">            <div class="tag-link-title">NPS官方中文文档</div>            <div class="tag-link-sitename">Github</div>        </div>        <i class="anzhiyufont anzhiyu-icon-angle-right"></i>    </div>    </a></div><h3 id="特点"><a href="#特点" class="headerlink" title="特点"></a>特点</h3><ul><li>协议支持全面，兼容几乎所有常用协议，例如tcp、udp、http(s)、socks5、p2p、http代理…</li><li>全平台兼容(linux、windows、macos、群辉等)，支持一键安装为系统服务</li><li>控制全面，同时支持服务端和客户端控制</li><li>https集成，支持将后端代理和web服务转成https，同时支持多证书</li><li>操作简单，只需简单的配置即可在web ui上完成其余操作</li><li>展示信息全面，流量、系统信息、即时带宽、客户端版本等</li><li>扩展功能强大，该有的都有了（缓存、压缩、加密、流量限制、带宽限制、端口复用等等）</li><li>域名解析具备自定义header、404页面配置、host修改、站点保护、URL路由、泛解析等功能</li><li>服务端支持多用户和用户注册功能</li></ul><h2 id="准备"><a href="#准备" class="headerlink" title="准备"></a>准备</h2><p><strong>首先需要一台云服务器，要有公网IP的，推荐雨云的：</strong></p><p><strong>雨云优惠注册地址：<a href="https://www.rainyun.com/Lin_">https://www.rainyun.com/Lin_</a></strong></p><p><strong>优惠码：Lin</strong></p><p><strong>使用优惠码注册后绑定微信可获得5折优惠券</strong></p><p>雨云账号注册&amp;云服务器购买和使用教程：</p><iframe src="//player.bilibili.com/player.html?aid=449635652&amp;bvid=BV1Kj411x7G6&amp;cid=1300615117&amp;p=1&autoplay=0" scrolling="no"   border="0" frameborder="no" framespacing="0" allowfullscreen="true" style="width: 100%;min-height: 350px;"> </iframe><p>注册完账号后进到雨云控制台，<strong>云服务器</strong>入口可以在后台的 <strong>总览</strong> 和 <strong>云产品</strong> 部分找到：<img src="https://tc.zeruns.tech/images/2023/11/15/20231114220844_97e4c0aea639203fa5970e521bb9aa14.png" alt="img"></p><p>点击<strong>购买云服务器</strong>，接着选择服务器区域，国内用户建议选择内地机房，因为延迟低，比如宿迁和十堰，其中推荐十堰，因为IP便宜，如果预算充足选择宿迁更好。<img src="https://tc.zeruns.tech/images/2023/11/15/20231114222311_811e2ff33e8d5b7e5955ba32d1082667.png" alt="img"></p><p>配置选择2核2G一般够用了。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114222533312_7868bb8cec0bc5bd5fdc641c09d4d161.png" alt="img"></p><p>系统选择<strong>Debian12</strong>，预安装APP选择<strong>Docker环境</strong>（选了这个可以跳过下面安装Docker的步奏）。如果所选区域没有Debian12就选择Debian11，如果没有预安装Docker就需要执行下面教程安装Docker那步<img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114222751234_bc7fbc8bad1f3670433baac7f736bf96.png" alt="img"></p><p>都选好后就可以点击立即购买了，也可以选择1元试用1天。</p><p>购买后即可在我的云服务器这里看到你买的云服务器，点击<strong>管理</strong>。<img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114223339447_3927b766ebead0835bf0a3ce47481bbe.png" alt="img"></p><p>接着就可以看到云服务器的信息了，在这里重装&#x2F;切换系统，可以升级配置。<img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114223526703_50554c5331f7143f1601e71870821136.png" alt="img"></p><h2 id="连接服务器"><a href="#连接服务器" class="headerlink" title="连接服务器"></a>连接服务器</h2><p>下载安装并打开<code>ssh</code>客户端软件，<code>ssh</code>客户端软件推荐<code>putty</code>或<code>mobaxterm</code>。</p><p>我这里用<code>mobaxterm</code>，在SSH客户端中输入你的服务器的IP地址（雨云控制台获取），还有SSH端口（一般默认是22），然后点击好的或者打开。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114230151729_35725a0d39fe81dec3a06f6df7556770.png" alt="img"></p><p>然后输入账号并按回车，账号一般默认为<strong>root</strong>，接着输入密码并按回车确定，输入密码时不会显示出来。</p><p>温馨提示：在SSH终端中按住鼠标左键选择文字，然后松开鼠标，再在空白处单击一下，这样就把选中的文字复制了；在SSH终端单击右键即为粘贴。<img src="https://tc.zeruns.tech/images/2023/11/15/image-20231114230247490_7a4601d09764193903a7dd65a83a7e3a.png" alt="img"></p><h2 id="安装Docker"><a href="#安装Docker" class="headerlink" title="安装Docker"></a>安装Docker</h2><p><strong>如果选择了预安装Docker环境就直接跳过安装这一步，直接Docker换国内源那一步。</strong></p><p>在ssh终端，输入下面的指令。</p><p><strong>用apt包管理器来安装：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装docker，如果遇到问是否继续的就输入y来确定</span><br><span class="line">apt install docker.io</span><br><span class="line"></span><br><span class="line"># 设置docker开机自启和启动docker</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line"></span><br><span class="line"># 检查是否安装成功，若安装成功会显示 Docker version x.x.x</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><img src="https://tc.zeruns.tech/images/2023/11/15/20231104145335_3c4bd30bd3b0584594259e1b41067dfc.png" alt="img"></p><p><strong>若没安装成功就试试下面的安装脚本：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装docker</span><br><span class="line">curl -sSL https://get.daocloud.io/docker | sh</span><br><span class="line"></span><br><span class="line"># 设置docker开机自启和启动docker</span><br><span class="line">systemctl enable docker &amp;&amp; systemctl start docker</span><br><span class="line"></span><br><span class="line"># 检查是否安装成功，若安装成功会显示 Docker version x.x.x</span><br><span class="line">docker -v</span><br></pre></td></tr></table></figure><p><strong>如果还是不行就尝试下面链接的手动安装教程吧</strong></p><p>docker手动安装教程：<a href="https://url.zeruns.tech/Y61CY">https://www.runoob.com/docker/ubuntu-docker-install.html</a></p><p><strong>Docker换国内源</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"># 创建或修改 /etc/docker/daemon.json 文件</span><br><span class="line">apt install nano &amp;&amp; nano /etc/docker/daemon.json</span><br><span class="line"></span><br><span class="line"># 然后输入下面内容:（输入完后按Ctrl+O，然后回车保存，接着按Ctrl+X退出编辑器）</span><br><span class="line">&#123;</span><br><span class="line">  &quot;registry-mirrors&quot;: [&quot;https://docker.nju.edu.cn&quot;]</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"># 重启docker服务</span><br><span class="line">systemctl restart docker.service</span><br></pre></td></tr></table></figure><p><img src="https://tc.zeruns.tech/images/2023/11/15/20231104145422_db9ba3a39bae45cea80760eed7cfaaa6.png" alt="img"></p><h2 id="搭建NPS服务端"><a href="#搭建NPS服务端" class="headerlink" title="搭建NPS服务端"></a>搭建NPS服务端</h2><p><strong>安装NPS服务端：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"># 创建 /opt/nps 目录存放配置文件</span><br><span class="line">mkdir /opt/nps</span><br><span class="line"></span><br><span class="line"># 安装wget并且下载配置文件</span><br><span class="line">apt install -y wget &amp;&amp; wget https://cn-sy1.rains3.com/rainyun-assets/Pic/2023/11/conf_1b8df8f61551218f81065d9b20288371.zip</span><br><span class="line"></span><br><span class="line"># 解压配置文件到 /opt/nps 目录</span><br><span class="line">apt install unzip &amp;&amp; unzip conf_1b8df8f61551218f81065d9b20288371.zip -d /opt/nps</span><br><span class="line"></span><br><span class="line"># 拉取 yisier1/nps 镜像</span><br><span class="line">docker pull yisier1/nps</span><br><span class="line"></span><br><span class="line"># 运行 nps 容器，配置文件夹 conf 在 /opt/nps/conf 目录下</span><br><span class="line">docker run -d --name=nps --restart=always --net=host -v /opt/nps/conf:/conf yisier1/nps</span><br><span class="line"></span><br><span class="line"># 查看日志</span><br><span class="line">docker logs nps</span><br></pre></td></tr></table></figure><p><strong>安装完后在浏览器打开：<a href="https://blog.zeruns.tech/">http:&#x2F;&#x2F;你服务器IP:8080</a></strong></p><p><strong>使用用户名和密码登陆（默认admin&#x2F;123，正式使用一定要更改，修改<code>/opt/nps/conf/nps.conf</code>配置文件中的web_password）</strong></p><p><strong>修改密码：</strong></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"># 安装nano编辑器，编辑nps.conf文件</span><br><span class="line">apt install nano &amp;&amp; nano /opt/nps/conf/nps.conf</span><br><span class="line"></span><br><span class="line"># 找到web_password这一项，修改密码，修改完后按Ctrl+O，然后回车保存，接着按Ctrl+X退出编辑器</span><br><span class="line"># 建议将public_vkey设置为空</span><br><span class="line"></span><br><span class="line"># 修改完后重启NPS容器</span><br><span class="line">docker restart nps</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">名称</th><th align="left">含义</th></tr></thead><tbody><tr><td align="left">web_port</td><td align="left">web管理端口</td></tr><tr><td align="left">web_password</td><td align="left">web界面管理密码</td></tr><tr><td align="left">web_username</td><td align="left">web界面管理账号</td></tr><tr><td align="left">web_base_url</td><td align="left">web管理主路径,用于将web管理置于代理子路径后面</td></tr><tr><td align="left">bridge_port</td><td align="left">服务端客户端通信端口</td></tr><tr><td align="left">https_proxy_port</td><td align="left">域名代理https代理监听端口</td></tr><tr><td align="left">http_proxy_port</td><td align="left">域名代理http代理监听端口</td></tr><tr><td align="left">auth_key</td><td align="left">web api密钥</td></tr><tr><td align="left">bridge_type</td><td align="left">客户端与服务端连接方式kcp或tcp</td></tr><tr><td align="left">public_vkey</td><td align="left">客户端以配置文件模式启动时的密钥，设置为空表示关闭客户端配置文件连接模式</td></tr><tr><td align="left">ip_limit</td><td align="left">是否限制ip访问，true或false或忽略</td></tr><tr><td align="left">flow_store_interval</td><td align="left">服务端流量数据持久化间隔，单位分钟，忽略表示不持久化</td></tr><tr><td align="left">log_level</td><td align="left">日志输出级别</td></tr><tr><td align="left">auth_crypt_key</td><td align="left">获取服务端authKey时的aes加密密钥，16位</td></tr><tr><td align="left">p2p_ip</td><td align="left">服务端Ip，使用p2p模式必填</td></tr><tr><td align="left">p2p_port</td><td align="left">p2p模式开启的udp端口</td></tr><tr><td align="left">pprof_ip</td><td align="left">debug pprof 服务端ip</td></tr><tr><td align="left">pprof_port</td><td align="left">debug pprof 端口</td></tr><tr><td align="left">disconnect_timeout</td><td align="left">客户端连接超时，单位 5s，默认值 60，即 300s &#x3D; 5mins</td></tr></tbody></table><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115000816788_0b16874072311c516e48574da55c28d8.png" alt="img"></p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115000941365_43a275b1bb26eb2431680934fe97d3ab.png" alt="img"></p><h2 id="客户端安装使用"><a href="#客户端安装使用" class="headerlink" title="客户端安装使用"></a>客户端安装使用</h2><p>首先登陆进来NPS服务端的WEB管理页面，找到【客户端】，点击【新增】。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115001439355_46bb556c956eb19f8f24041f27705914.png" alt="img"></p><p>备注这里就根据需要写，其他的看着来就行。最后点击【新增】<img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115001707046_f594c78a2c3ab126c6a29ad133c6ad0a.png" alt="img"></p><p>刷新一下就能看到我们添加的客户端了，目前是处于离线状态。左边有一个小加号，点击可以展开。下面的客户端命令我们一会要用。下面是各种客户端安装方法，选一种适合的就行。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115001805628_744438ab41dba88e7414d8c4d3de869a.png" alt="img"></p><h3 id="Windows"><a href="#Windows" class="headerlink" title="Windows"></a>Windows</h3><p>首先下载Windows版的客户端：</p><p>github下载地址：<a href="https://github.com/yisier/nps/releases">https://github.com/yisier/nps/releases</a></p><p>雨云ROS下载地址：<a href="https://cn-sy1.rains3.com/rainyun-assets/Pic/2023/11/windows_amd64_client.tar.gz">https://cn-sy1.rains3.com/rainyun-assets/Pic/2023/11/windows_amd64_client.tar.gz</a></p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115002039348_2fe8000fcbf3365beaa669c4d947929f.png" alt="img"></p><p>我在需要运行NPS客户端的Windows设备的C盘根目录下建立一个名字叫【npc】的目录，将刚才下载的NPS客户端的文件解压后放到里面。这里注意，我们只要【npc.exe】文件即可。</p><p>然后以管理员身份运行命令提示符，输入 <code>cd /npc</code> 跳转到npc目录下，输入以下命令：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npc.exe install 客户端命令（记得不要复制./npc 只要后边的）</span><br></pre></td></tr></table></figure><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115003815434_c2ce2f782ade151becbd71052ad05425.png" alt="img"></p><p>这样我们的npc就添加到系统服务里了，再找到 控制面板 - 管理工具 - 服务 里找到【nps内网穿透客户端】，找到【恢复】选项卡，按照下图中设置即可。设置完成后就可以启动服务了。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115003948001_4b9939acbddec1a252587523bdb1f09d.png" alt="img"></p><p>这样客户端就连接到了NPS的服务端了</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115004042765_e29944816b44564eb0089c083db6c6c7.png" alt="img"></p><h3 id="Linux-Docker"><a href="#Linux-Docker" class="headerlink" title="Linux Docker"></a>Linux Docker</h3><p>首先需要安装Docker，安装教程看上面。</p><p>Docker方式是支持多平台的，x86、ARM都可以，NAS用户可以通过这个方法安装客户端，一般NAS系统都支持docker。</p><p><strong>安装NPS客户端NPC：</strong></p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 拉取 yisier1/npc 镜像</span></span><br><span class="line">docker pull yisier1/npc</span><br><span class="line"></span><br><span class="line"><span class="comment"># 运行 npc 容器，按提示改好命令，如下图所示</span></span><br><span class="line">docker run -d --name=npc --restart=always --net=host yisier1/npc -server=&lt;ip:port&gt; -vkey=&lt;web界面中显示的密钥&gt; &lt;以及一些其他参数&gt;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 查看日志</span></span><br><span class="line">docker logs npc</span><br></pre></td></tr></table></figure><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115005306527_d58a83cb64e7dcf36c967e5a205e7287.png" alt="img"><br>这样NPS客户端就算安装完成了</p><h3 id="建立内网穿透隧道"><a href="#建立内网穿透隧道" class="headerlink" title="建立内网穿透隧道"></a>建立内网穿透隧道</h3><p>按照上面的方法安装好客户端后就可以新建内网穿透隧道了，我这里以Windows的远程桌面服务为例，需要将TCP 3389端口映射出去，所以新建一个TCP隧道，你们根据自己实际需要选择TCP还是UDP。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115005727908_fba14e328216ac4e35c2046782b413c6.png" alt="img"></p><p>客户端ID填写你上面添加的客户端的ID，服务端端口填写想映射到服务器的哪个端口，目标IP端口填写你客户端想要映射的端口，IP填127.0.0.1表示本机，也可以填局域网内的其他设备的IP，可将局域网内的其他设备端口映射出去，我这里就填了本机的3389端口，填好后点击新增就行。</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115005859406_86201521bfe472764338524edfbf0847.png" alt="img"></p><p>接着你就可以通过这个服务器的这个端口访问到你内网的机器</p><p><img src="https://tc.zeruns.tech/images/2023/11/15/image-20231115010037963_d9a49899a00f24c3d1fede3b0a30c7e4.png" alt="img"></p>]]></content>
    
    
      
      
    <summary type="html">&lt;p&gt;在这个高度互联的时代，我们越来越依赖互联网来实现工作和生活的各种需求。然而，随着一些省份逐步收回家庭用户的公网IPv4地址（目前国内大部分地方都是多个用户共用一个公网IPv4地址），我们无法直接通过公网访问家里的设备和服务，这给我们带来了一定的困扰。但是别担心，内网穿透技术</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="雨云服务器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E9%9B%A8%E4%BA%91%E6%9C%8D%E5%8A%A1%E5%99%A8/"/>
    
    <category term="NPS搭建" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/NPS%E6%90%AD%E5%BB%BA/"/>
    
    <category term="内网穿透" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%86%85%E7%BD%91%E7%A9%BF%E9%80%8F/"/>
    
  </entry>
  
  <entry>
    <title>API随机获取一言</title>
    <link href="https://blog.bsgun.cn/posts/21998/"/>
    <id>https://blog.bsgun.cn/posts/21998/</id>
    <published>2020-09-06T07:38:43.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>API随机获取一言代码</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$counter</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;counter.dat&quot;</span>));</span><br><span class="line">     <span class="variable">$_SESSION</span>[<span class="string">&#x27;#&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">     <span class="variable">$counter</span>++;</span><br><span class="line">     <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;counter.dat&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="variable">$counter</span>);</span><br><span class="line">     <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="comment">//获取句子文件的绝对路径</span></span><br><span class="line"><span class="variable">$path</span> = <span class="title function_ invoke__">dirname</span>(<span class="keyword">__FILE__</span>);</span><br><span class="line"><span class="variable">$file</span> = <span class="title function_ invoke__">file</span>(<span class="variable">$path</span>.<span class="string">&quot;binduyan.txt&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="comment">//随机读取一行</span></span><br><span class="line"><span class="variable">$arr</span>  = <span class="title function_ invoke__">mt_rand</span>( <span class="number">0</span>, <span class="title function_ invoke__">count</span>( <span class="variable">$file</span> ) - <span class="number">1</span> );</span><br><span class="line"><span class="variable">$content</span>  = <span class="title function_ invoke__">trim</span>(<span class="variable">$file</span>[<span class="variable">$arr</span>]);</span><br><span class="line"></span><br><span class="line"><span class="comment">//编码判断，用于输出相应的响应头部编码</span></span><br><span class="line"><span class="keyword">if</span> (<span class="keyword">isset</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;charset&#x27;</span>]) &amp;&amp; !<span class="keyword">empty</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;charset&#x27;</span>])) &#123;</span><br><span class="line">    <span class="variable">$charset</span> = <span class="variable">$_GET</span>[<span class="string">&#x27;charset&#x27;</span>];</span><br><span class="line">    <span class="keyword">if</span> (<span class="title function_ invoke__">strcasecmp</span>(<span class="variable">$charset</span>,<span class="string">&quot;gbk&quot;</span>) == <span class="number">0</span> ) &#123;</span><br><span class="line">        <span class="variable">$content</span> = <span class="title function_ invoke__">mb_convert_encoding</span>(<span class="variable">$content</span>,<span class="string">&#x27;gbk&#x27;</span>, <span class="string">&#x27;utf-8&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="variable">$charset</span> = <span class="string">&#x27;utf-8&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//格式化判断，输出js或纯文本</span></span><br><span class="line"><span class="keyword">if</span> (<span class="variable">$_GET</span>[<span class="string">&#x27;encode&#x27;</span>] === <span class="string">&#x27;js&#x27;</span>) &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="string">&quot;function binduyan()&#123;document.write(&#x27;&quot;</span> . <span class="variable">$content</span> .<span class="string">&quot;&#x27;);&#125;&quot;</span>;</span><br><span class="line">&#125;<span class="keyword">else</span> <span class="keyword">if</span>(<span class="variable">$_GET</span>[<span class="string">&#x27;encode&#x27;</span>] === <span class="string">&#x27;json&#x27;</span>)&#123;</span><br><span class="line">    <span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line">    <span class="variable">$content</span> = <span class="keyword">array</span>(<span class="string">&#x27;text&#x27;</span>=&gt;<span class="variable">$content</span>);</span><br><span class="line">    <span class="keyword">echo</span> <span class="title function_ invoke__">json_encode</span>(<span class="variable">$content</span>, JSON_UNESCAPED_UNICODE);</span><br><span class="line">&#125;<span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">echo</span> <span class="variable">$content</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上传你的服务器或者主机空间，命名随意后缀为<code>.php</code></p><p>并在同级目录上传一个为<code>binduyuan.txt</code>后缀的文件</p><p>PS：一句话占一行</p><p>访问形式为   <code>http(s)://你的域名/你的命名.php</code></p><p>例如 <code> https://bsgun.cn/binduyan.php</code></p><blockquote><p>车到山前必有雾，船到桥头自然沉。</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;API随机获取一言代码&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="API" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/API/"/>
    
    <category term="分享" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>API随机获取图片代码</title>
    <link href="https://blog.bsgun.cn/posts/1806/"/>
    <id>https://blog.bsgun.cn/posts/1806/</id>
    <published>2020-08-28T22:40:00.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>API随机获取图片代码</strong></p></blockquote><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line">    <span class="variable">$counter</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">file_get_contents</span>(<span class="string">&quot;counter.dat&quot;</span>));</span><br><span class="line">     <span class="variable">$_SESSION</span>[<span class="string">&#x27;#&#x27;</span>] = <span class="literal">true</span>;</span><br><span class="line">     <span class="variable">$counter</span>++;</span><br><span class="line">     <span class="variable">$fp</span> = <span class="title function_ invoke__">fopen</span>(<span class="string">&quot;counter.dat&quot;</span>,<span class="string">&quot;w&quot;</span>);</span><br><span class="line">     <span class="title function_ invoke__">fwrite</span>(<span class="variable">$fp</span>, <span class="variable">$counter</span>);</span><br><span class="line">     <span class="title function_ invoke__">fclose</span>(<span class="variable">$fp</span>);</span><br><span class="line"> <span class="meta">?&gt;</span></span><br><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"><span class="variable">$filename</span> = <span class="string">&quot;img.txt&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(!<span class="title function_ invoke__">file_exists</span>(<span class="variable">$filename</span>))&#123;</span><br><span class="line"><span class="keyword">die</span>(<span class="string">&#x27;文件不存在&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$pics</span> = [];</span><br><span class="line"><span class="variable">$fs</span> = <span class="title function_ invoke__">fopen</span>(<span class="variable">$filename</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line"><span class="keyword">while</span>(!<span class="title function_ invoke__">feof</span>(<span class="variable">$fs</span>))&#123;</span><br><span class="line"><span class="variable">$line</span>=<span class="title function_ invoke__">trim</span>(<span class="title function_ invoke__">fgets</span>(<span class="variable">$fs</span>));</span><br><span class="line"><span class="keyword">if</span>(<span class="variable">$line</span>!=<span class="string">&#x27;&#x27;</span>)&#123;</span><br><span class="line"><span class="title function_ invoke__">array_push</span>(<span class="variable">$pics</span>, <span class="variable">$line</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$pic</span> = <span class="variable">$pics</span>[<span class="title function_ invoke__">array_rand</span>(<span class="variable">$pics</span>)];</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="variable">$type</span>=<span class="variable">$_GET</span>[<span class="string">&#x27;type&#x27;</span>];</span><br><span class="line"><span class="keyword">switch</span>(<span class="variable">$type</span>)&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">case</span> <span class="string">&#x27;json&#x27;</span>:</span><br><span class="line"><span class="title function_ invoke__">header</span>(<span class="string">&#x27;Content-type:text/json&#x27;</span>);</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">json_encode</span>([<span class="string">&#x27;pic&#x27;</span>=&gt;<span class="variable">$pic</span>]));</span><br><span class="line"></span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">die</span>(<span class="title function_ invoke__">header</span>(<span class="string">&quot;Location: <span class="subst">$pic</span>&quot;</span>));</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><p>上传你的服务器或者主机空间，命名随意后缀为<code>.php</code></p><p>并在同级目录上传一个为<code>img.txt</code>后缀的文件</p><p>PS：一个图片链接链接占一行</p><p>访问形式为   <code>http(s)://你的域名/你的命名.php</code></p><p>例如 <code> https://bsgun.cn/m.php</code></p><p>输出为图片</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;API随机获取图片代码&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight php&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="API" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/API/"/>
    
    <category term="分享" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%88%86%E4%BA%AB/"/>
    
  </entry>
  
  <entry>
    <title>关于API接口--持续分享</title>
    <link href="https://blog.bsgun.cn/posts/49303/"/>
    <id>https://blog.bsgun.cn/posts/49303/</id>
    <published>2020-08-28T22:30:43.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>本文内容已无效</strong></p></blockquote><p>因为一些原因呢，我原先的Api停止服务了！</p><table><thead><tr><th align="left">API列表</th><th align="left">功能</th><th align="left">地址</th></tr></thead><tbody><tr><td align="left">随机动漫图</td><td align="left">顾名思义随机刷新动漫图</td><td align="left">失效</td></tr><tr><td align="left">Qrcode二维码</td><td align="left">生成链接二维码</td><td align="left">失效</td></tr><tr><td align="left">Bing每日一图</td><td align="left">获取Bing每日的背景图</td><td align="left">失效</td></tr><tr><td align="left">QQ头像和昵称</td><td align="left">获取QQ的头像地址和QQ昵称</td><td align="left">失效</td></tr><tr><td align="left">QQ在线查询</td><td align="left">查询QQ是否在线-离线</td><td align="left">失效</td></tr><tr><td align="left">随机一言</td><td align="left">定时送上一份鸡汤</td><td align="left">失效</td></tr><tr><td align="left">网易云音乐解析</td><td align="left">到点了上号</td><td align="left">失效</td></tr></tbody></table><p>Bye-bye</p>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;本文内容已无效&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;因为一些原因呢，我原先的Api停止服务了！&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th align=&quot;left&quot;&gt;API列表&lt;/th&gt;
&lt;th</summary>
      
    
    
    
    <category term="教程" scheme="https://blog.bsgun.cn/categories/%E6%95%99%E7%A8%8B/"/>
    
    
    <category term="API" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/API/"/>
    
    <category term="分享" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E5%88%86%E4%BA%AB/"/>
    
    <category term="白嫖" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E7%99%BD%E5%AB%96/"/>
    
  </entry>
  
  <entry>
    <title>博客现状</title>
    <link href="https://blog.bsgun.cn/posts/33483/"/>
    <id>https://blog.bsgun.cn/posts/33483/</id>
    <published>2020-08-17T11:12:00.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="受到攻击"><a href="#受到攻击" class="headerlink" title="受到攻击"></a>受到攻击</h2><p><strong>2020.7.24  网站受到大量攻击<br>导致无法访问，照成 <code>0</code> 损失</strong></p><p><strong>2020.7.30 整站整个迁移至Hexo</strong></p><h2 style="text-align:center">网站站点状态</h2><table><thead><tr><th align="center">名称</th><th align="center">接口</th><th align="center">状态</th></tr></thead><tbody><tr><td align="center">主页</td><td align="center"><a href="https://www.bsgun.cn/">https://www.bsgun.cn/</a></td><td align="center">✔️</td></tr><tr><td align="center">搜索</td><td align="center"><a href="https://nav.bsgun.cn/">https://nav.bsgun.cn/</a></td><td align="center">✔️</td></tr><tr><td align="center">博客</td><td align="center"><a href="https://blog.bsgun.cn/">https://blog.bsgun.cn/</a></td><td align="center">✔️</td></tr><tr><td align="center">我们</td><td align="center"><a href="https://love.bsgun.cn/">https://love.bsgun.cn/</a></td><td align="center">✔️</td></tr><tr><td align="center">监测</td><td align="center"><a href="https://status.bsgun.cn/">https://status.bsgun.cn/</a></td><td align="center">✔️</td></tr><tr><td align="center">图床</td><td align="center"><a href="https://img.ruom.top/">https://img.ruom.top/</a></td><td align="center">✔️</td></tr><tr><td align="center">网盘</td><td align="center"><a href="https://pan.ruom.top/">https://pan.ruom.top/</a></td><td align="center">✔️</td></tr><tr><td align="center">API</td><td align="center"><a href="https://api.bsgun.cn/">https://api.bsgun.cn/</a></td><td align="center">❌</td></tr><tr><td align="center">Rss</td><td align="center"><a href="https://rss.bsgun.cn/">https://rss.bsgun.cn/</a></td><td align="center">❌</td></tr></tbody></table><blockquote><p>❌无法访问✔️正常访问</p></blockquote>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;受到攻击&quot;&gt;&lt;a href=&quot;#受到攻击&quot; class=&quot;headerlink&quot; title=&quot;受到攻击&quot;&gt;&lt;/a&gt;受到攻击&lt;/h2&gt;&lt;p&gt;&lt;strong&gt;2020.7.24  网站受到大量攻击&lt;br&gt;导致无法访问，照成 &lt;code&gt;0&lt;/code&gt; 损失&lt;/st</summary>
      
    
    
    
    <category term="随想" scheme="https://blog.bsgun.cn/categories/%E9%9A%8F%E6%83%B3/"/>
    
    
  </entry>
  
  <entry>
    <title>阿里云Serverless函数计算领马克杯</title>
    <link href="https://blog.bsgun.cn/posts/ae8e1de1/"/>
    <id>https://blog.bsgun.cn/posts/ae8e1de1/</id>
    <published>2020-07-12T14:08:02.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<blockquote><p><strong>活动已经结束了</strong></p></blockquote><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/2024062787109.webp" alt="白嫖成功"></p><p><strong>刚刚没啥子事咱也去领了个阿里云的马克杯，哈哈哈白嫖成功–<a href="https://developer.aliyun.com/adc/series/fc/">活动地址</a></strong></p><ul><li><strong>在活动期间每个用户可挑战两次考试，</strong></li><li><strong>每天会增加200的奖品余额，领完即止。</strong></li><li><strong>可能凌晨补一次，下午随机补，前一天答完没领到的可以次日再来领取。</strong></li></ul>]]></content>
    
    
      
      
    <summary type="html">&lt;blockquote&gt;
&lt;p&gt;&lt;strong&gt;活动已经结束了&lt;/strong&gt;&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;https://oss-cdn.bsgun.cn/2024/06/27/2024062787109.webp&quot; alt=&quot;白嫖成功&quot;&gt;&lt;</summary>
      
    
    
    
    <category term="生活" scheme="https://blog.bsgun.cn/categories/%E7%94%9F%E6%B4%BB/"/>
    
    
    <category term="白嫖" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E7%99%BD%E5%AB%96/"/>
    
    <category term="阿里云" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E9%98%BF%E9%87%8C%E4%BA%91/"/>
    
    <category term="活动" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E6%B4%BB%E5%8A%A8/"/>
    
  </entry>
  
  <entry>
    <title>Packet Tracer思科模拟器入门教程(三)</title>
    <link href="https://blog.bsgun.cn/posts/26735/"/>
    <id>https://blog.bsgun.cn/posts/26735/</id>
    <published>2020-06-22T18:08:02.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标"></a>实验目标</h2><ul><li>掌握采用Telnet方式配置交换机的方法。</li></ul><h2 id="实验背景"><a href="#实验背景" class="headerlink" title="实验背景"></a>实验背景</h2><ul><li>配置交换机的管理IP地址（计算机的<code>IP</code>地址与交换机管理<code>IP</code>地址在同一个网段）：</li><li>为<code>telnet</code>用户配置用户名和登录口令：</li><li>交换机、路由器中有很多密码，设置对这些密码可以有效的提高设备的安全性。</li><li>switch(config)#<code>enable password ******</code> 设置进入特权模式的密码</li><li>switch(config-line)可以设置通过<code>console</code>端口连接设备及<code>Telnet</code>远程登录时所需的密码；</li><li>switch(config)#<code>line vty 0 4</code></li><li>switch(config-line)#<code>password XXX</code></li><li>switch(config-line)#<code>login</code></li></ul><h2 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h2><p><code>电脑；手；脑子；Switch_2960 1台；PC 1台；直连线；配置线</code></p><h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="1-新建Packet-Tracer拓扑图"><a href="#1-新建Packet-Tracer拓扑图" class="headerlink" title="1. 新建Packet Tracer拓扑图"></a>1. 新建Packet Tracer拓扑图</h3><p>详细见 Packet Tracer思科模拟器入门教程(一)</p><h3 id="2-配置交换机管理ip地址"><a href="#2-配置交换机管理ip地址" class="headerlink" title="2. 配置交换机管理ip地址"></a>2. 配置交换机管理ip地址</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">Switch&gt; en           <span class="comment">//进入特权模式</span></span><br><span class="line">Switch<span class="meta"># conf t       <span class="comment">//进入全局配置模式</span></span></span><br><span class="line">Switch(config)<span class="meta"># int  vlan 1           <span class="comment">// 创建并进入VLAN 1的接口视图</span></span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta"># ip  address **IP** 子网掩码          <span class="comment">//在VLAN1接口上配置交换机远程管理的IP地址</span></span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta"># no shutdown        <span class="comment">//开启接口</span></span></span><br><span class="line">Switch(config-<span class="keyword">if</span>)<span class="meta">#exit        <span class="comment">//回到全局配置模式</span></span></span><br></pre></td></tr></table></figure><hr><h3 id="3-配置用户登录密码"><a href="#3-配置用户登录密码" class="headerlink" title="3. 配置用户登录密码"></a>3. 配置用户登录密码</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Switch(config)<span class="meta"># enable password ***         <span class="comment">//设置进入特权模式的密码</span></span></span><br><span class="line">Switch(config)<span class="meta"># <span class="keyword">line</span> vty 0 4           <span class="comment">//进入远程登录用户管理视图，0-4个用户</span></span></span><br><span class="line">Switch(config-line)<span class="meta"># password XXX</span></span><br><span class="line">Switch(config-line)<span class="meta"># username ml password 123</span></span><br><span class="line">Switch(config-line)<span class="meta"># privilege level 3          <span class="comment">//配置远程登录用户的权限为最高级别权限3</span></span></span><br><span class="line">Switch(config-line)<span class="meta"># login        <span class="comment">//打开登录认证功能</span></span></span><br><span class="line">Switch(config-line)<span class="meta"># end         <span class="comment">//退出到特权模式</span></span></span><br><span class="line">Switch<span class="meta"># show run           <span class="comment">//显示当前交换机配置情况</span></span></span><br></pre></td></tr></table></figure><h2 id="实验结果"><a href="#实验结果" class="headerlink" title="实验结果"></a>实验结果</h2><p><strong>进入 <code>Cmd</code>输入以下进行测试</strong></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ping <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span>         <span class="comment">//成功以后，再做下一步</span></span><br><span class="line">telnet <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br><span class="line">输入password:<span class="number">123456</span>    <span class="comment">//登录成功，进入用户模式</span></span><br><span class="line">Switch&gt;Enable     <span class="comment">//进入特权模式，新版会自动进入特权模式</span></span><br><span class="line">Switch#</span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1b01d84fe.webp" alt="检测"></p><h2 id="实验心得"><a href="#实验心得" class="headerlink" title="实验心得"></a>实验心得</h2><p>学会配置交换机telnet功能，并通过PC来进行远程登陆配置交换机</p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验目标&quot;&gt;&lt;a href=&quot;#实验目标&quot; class=&quot;headerlink&quot; title=&quot;实验目标&quot;&gt;&lt;/a&gt;实验目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;掌握采用Telnet方式配置交换机的方法。&lt;/li&gt;
&lt;/ul&gt;
&lt;h2 id=&quot;实验背景&quot;&gt;&lt;a href=&quot;</summary>
      
    
    
    
    <category term="网络基础" scheme="https://blog.bsgun.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="网络" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="交换机" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
    
    <category term="思科模拟器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Packet Tracer思科模拟器入门教程(二)</title>
    <link href="https://blog.bsgun.cn/posts/63693/"/>
    <id>https://blog.bsgun.cn/posts/63693/</id>
    <published>2020-06-18T18:08:02.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="实验目标"><a href="#实验目标" class="headerlink" title="实验目标"></a>实验目标</h2><ul><li>掌握交换机基本信息的配置管理。</li></ul><h3 id="技术原理"><a href="#技术原理" class="headerlink" title="技术原理"></a>技术原理</h3><ul><li><p>交换机的管理方式基本分为两种：带内管理和带外管理。</p><p>通过交换机的Console端口管理交换机属于带外管理；这种管理方式不占用交换机的网络端口，第一次配置交换机必须利用Console端口进行配置。<br>通过Telnet、拨号等方式属于带内管理。</p></li><li><p>交换机的命令行操作模式主要包括：</p></li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">用户模式      Switch&gt;</span><br><span class="line">特权模式       Switch*#*</span><br><span class="line">全局配置模式   Switch(config)*#*</span><br><span class="line">端口模式       Switch(config-<span class="keyword">if</span>)*#</span><br></pre></td></tr></table></figure><h3 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h3><p><code>电脑；手；脑子；思科模拟器；Switch_2960 1台； PC 2台； 直连线</code><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f19ea27ddc.webp" alt="示意"></p><h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="1-点击PC0，选择选择Config选项，单击FastEthernet0选项"><a href="#1-点击PC0，选择选择Config选项，单击FastEthernet0选项" class="headerlink" title="1.点击PC0，选择选择Config选项，单击FastEthernet0选项"></a>1.点击PC0，选择选择Config选项，单击FastEthernet0选项</h3><p>将PC0设为100Mbps的速率，运行模式设为全双工模式<br><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f19f3319e6.webp" alt="设置"></p><h3 id="2-点击交换机，选择CLI，进入命令行界面"><a href="#2-点击交换机，选择CLI，进入命令行界面" class="headerlink" title="2.点击交换机，选择CLI，进入命令行界面"></a>2.点击交换机，选择CLI，进入命令行界面</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a043f347.webp" alt="命令界面"></p><h3 id="3-配置交换机"><a href="#3-配置交换机" class="headerlink" title="3.配置交换机"></a>3.配置交换机</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">修改交换机名、端口</span><br><span class="line">Switch&gt;enable    <span class="comment">//进入特权模式</span></span><br><span class="line">Switch<span class="meta">#conf  t   <span class="comment">//进入配置模式</span></span></span><br><span class="line">Switch(config)<span class="meta">#hostname  S2960    <span class="comment">//修改交换机名</span></span></span><br><span class="line">S2960(config)<span class="meta">#interface fa 0/1    <span class="comment">//选择端口</span></span></span><br><span class="line">S2960(config-<span class="keyword">if</span>)<span class="meta">#speed 100       <span class="comment">//修改端口速率为100Mbps</span></span></span><br><span class="line">S2960(config-<span class="keyword">if</span>)<span class="meta">#duplex full    <span class="comment">//修改为全双工模式</span></span></span><br><span class="line">S2960(config-<span class="keyword">if</span>)<span class="meta">#exit            <span class="comment">//退出端口设置</span></span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a1273bdf.webp" alt="示例"></p><h3 id="4-查看交换机配置信息"><a href="#4-查看交换机配置信息" class="headerlink" title="4.查看交换机配置信息"></a>4.查看交换机配置信息</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">查看交换机各项配置参数</span><br><span class="line">Switch<span class="meta">#show version         <span class="comment">//查看交换机版本信息</span></span></span><br><span class="line">Switch<span class="meta">#show running-config            <span class="comment">// 查看当前生效的配置信息</span></span></span><br><span class="line">Switch<span class="meta">#show interface            <span class="comment">//查看端口信息</span></span></span><br><span class="line">Switch<span class="meta">#show mac-address-table    <span class="comment">//查看交换机的MAC地址</span></span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a3e98d81.webp" alt="示例"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a48e6021.webp" alt="示例"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a50b2513.webp" alt="示例"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a5da05b8.webp" alt="示例"></p><h3 id="5-密码设置与取消"><a href="#5-密码设置与取消" class="headerlink" title="5.密码设置与取消"></a>5.密码设置与取消</h3><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Switch<span class="meta">#config t</span></span><br><span class="line">Switch(config)<span class="meta">#enable  password  cisco   <span class="comment">//设置进入特权模式的密码为cisco</span></span></span><br><span class="line">Switch(config)<span class="meta">#no enable password    <span class="comment">//取消特权模式密码</span></span></span><br><span class="line"><span class="comment">//switch(config-line)可以设置通过console端口连接设备及Telnet远程登录时所需的密码</span></span><br><span class="line">Switch(config)<span class="meta">#<span class="keyword">line</span> console 0      <span class="comment">//表示配置控制台线路，0是控制台的线路编号</span></span></span><br><span class="line">Switch(config-line)<span class="meta">#password cisco    <span class="comment">//设置进入控制台访问的密码</span></span></span><br><span class="line">Switch(config-line)<span class="meta">#login    <span class="comment">//用于打开登录认证功能</span></span></span><br><span class="line">Switch(config-line)<span class="meta">#no password   <span class="comment">//取消密码</span></span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/666f1a6a40b3e.webp" alt="示例"></p><h2 id="目的"><a href="#目的" class="headerlink" title="目的"></a>目的</h2><p>目的是让我们学会如何切换交换机的命令模式并配置基本命令本文转自<a href="https://blog.csdn.net/gengkui9897/article/details/85109962">柚子君</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;实验目标&quot;&gt;&lt;a href=&quot;#实验目标&quot; class=&quot;headerlink&quot; title=&quot;实验目标&quot;&gt;&lt;/a&gt;实验目标&lt;/h2&gt;&lt;ul&gt;
&lt;li&gt;掌握交换机基本信息的配置管理。&lt;/li&gt;
&lt;/ul&gt;
&lt;h3 id=&quot;技术原理&quot;&gt;&lt;a href=&quot;#技术原理&quot;</summary>
      
    
    
    
    <category term="网络基础" scheme="https://blog.bsgun.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="网络" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="交换机" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
    
    <category term="思科模拟器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    
  </entry>
  
  <entry>
    <title>Packet Tracer思科模拟器入门教程(一)</title>
    <link href="https://blog.bsgun.cn/posts/14441/"/>
    <id>https://blog.bsgun.cn/posts/14441/</id>
    <published>2020-06-13T18:08:02.000Z</published>
    <updated>2024-08-09T05:32:23.119Z</updated>
    
    <content type="html"><![CDATA[<h2 id="了解Packet-Tracer"><a href="#了解Packet-Tracer" class="headerlink" title="了解Packet Tracer"></a>了解Packet Tracer</h2><p>今天我开学以来第一次上实训基础课，记录一下</p><h3 id="Packet-Tracer介绍"><a href="#Packet-Tracer介绍" class="headerlink" title="Packet Tracer介绍"></a>Packet Tracer介绍</h3><ol><li>Packet Tracer是Cisco公司针对CCNA认证开发的一个用来设计、配置和故障排除网络的模拟软件。</li><li>Packer Tracer模拟器软件比Boson功能强大，比Dynamips操作简单，非常适合网络设备初学者使用。</li><li>Packet Tracer模拟器是考CCNA必须掌握的软件。</li></ol><h2 id="学习任务"><a href="#学习任务" class="headerlink" title="学习任务"></a>学习任务</h2><ol><li>安装Packer Tracer；</li><li>利用一台型号为2960的交换机将2pc机互连组建一个小型局域网；</li><li>分别设置pc机的ip地址；</li><li>验证pc机间可以互通。</li></ol><h2 id="实验设备"><a href="#实验设备" class="headerlink" title="实验设备"></a>实验设备</h2><p><code>电脑；手；脑子；思科模拟器；Switch_2960 1台； PC 2台； 直连线</code><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f4616f224.webp" alt="示意"></p><h2 id="实验步骤"><a href="#实验步骤" class="headerlink" title="实验步骤"></a>实验步骤</h2><h3 id="1-选择网络设备"><a href="#1-选择网络设备" class="headerlink" title="1.选择网络设备"></a>1.选择网络设备</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f47d7c18b.webp" alt="网络设备"></p><h3 id="2-选择交换机"><a href="#2-选择交换机" class="headerlink" title="2.选择交换机"></a>2.选择交换机</h3><p>!<img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f4d10af13.webp" alt="交换机"></p><h3 id="3-在交换机中选择2960型号的交换机"><a href="#3-在交换机中选择2960型号的交换机" class="headerlink" title="3.在交换机中选择2960型号的交换机"></a>3.在交换机中选择2960型号的交换机</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f5140ca45.webp" alt="2960型号"></p><h3 id="4-将其拖入到面板中"><a href="#4-将其拖入到面板中" class="headerlink" title="4.将其拖入到面板中"></a>4.将其拖入到面板中</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f533e55cb.webp" alt="拖到面板"></p><h3 id="5-在端设备选项中选择PC并拖入到面板中"><a href="#5-在端设备选项中选择PC并拖入到面板中" class="headerlink" title="5.在端设备选项中选择PC并拖入到面板中"></a>5.在端设备选项中选择PC并拖入到面板中</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f5487f497.webp" alt="选中PC"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f55142b4f.webp" alt="初步完成"></p><h3 id="6-选择连接选项"><a href="#6-选择连接选项" class="headerlink" title="6.选择连接选项"></a>6.选择连接选项</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f55b852e4.webp" alt="选中连接"></p><h3 id="7-选择直通线，将两台PC的FastEthernet口连接到交换机"><a href="#7-选择直通线，将两台PC的FastEthernet口连接到交换机" class="headerlink" title="7.选择直通线，将两台PC的FastEthernet口连接到交换机"></a>7.选择直通线，将两台PC的FastEthernet口连接到交换机</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f5674205f.webp" alt="选择直通线"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f57054bb1.webp" alt="FastEthernet口连接"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f5c466d6d.webp" alt="FastEthernet口连接"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f62d6a63b.webp" alt="FastEthernet口连接"><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f6419bb5f.webp" alt="FastEthernet口连接"></p><h3 id="8-连接好后设备连线后将会变为绿色"><a href="#8-连接好后设备连线后将会变为绿色" class="headerlink" title="8.连接好后设备连线后将会变为绿色"></a>8.连接好后设备连线后将会变为绿色</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f68a7420a.webp" alt="连接成功"></p><h3 id="9-点击PC2，进入PC2窗口，选择Desktop选项卡，选择IP-Configuration"><a href="#9-点击PC2，进入PC2窗口，选择Desktop选项卡，选择IP-Configuration" class="headerlink" title="9.点击PC2，进入PC2窗口，选择Desktop选项卡，选择IP Configuration"></a>9.点击PC2，进入PC2窗口，选择Desktop选项卡，选择IP Configuration</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f69f0f2bb.webp" alt="PC2"></p><h3 id="10-配置相关参数"><a href="#10-配置相关参数" class="headerlink" title="10.配置相关参数"></a>10.配置相关参数</h3><p><code>PC2</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IP：          <span class="number">192.168</span><span class="number">.1</span><span class="number">.2</span></span><br><span class="line">Submask：     <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Gateway：     <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f6b056c79.webp" alt="PC2"></p><p>使用相同的方式配置PC3</p><p><code>PC3</code></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">IP：          <span class="number">192.168</span><span class="number">.1</span><span class="number">.3</span></span><br><span class="line">Submask：     <span class="number">255.255</span><span class="number">.255</span><span class="number">.0</span></span><br><span class="line">Gateway：     <span class="number">192.168</span><span class="number">.1</span><span class="number">.1</span></span><br></pre></td></tr></table></figure><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f6bdbcfae.webp" alt="PC3"></p><h3 id="11-使用PC2-ping-PC3"><a href="#11-使用PC2-ping-PC3" class="headerlink" title="11.使用PC2 ping PC3"></a>11.使用PC2 ping PC3</h3><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f715a2120.webp" alt="选择ping命令"></p><p>注意！这里不要直接ping PC3，只能ping+ip地址</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f7207a2a6.webp" alt="PC2 ping PC3"></p><p>同理，PC3 ping PC2</p><p><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f728622bd.webp" alt="PC3 ping PC2"></p><p>而因为此处没有路由器充当网关，因此无法ping通<code>192.168.1.1</code><br><img src="https://oss-cdn.bsgun.cn/2024/06/27/6673f732320ee.webp" alt="无法ping通"></p><h2 id="实验目的"><a href="#实验目的" class="headerlink" title="实验目的"></a>实验目的</h2><p>目的是让我们对Packet Tracer思科模拟器有一定的了解本文转自<a href="https://blog.csdn.net/gengkui9897/article/details/85107429">柚子君</a></p>]]></content>
    
    
      
      
    <summary type="html">&lt;h2 id=&quot;了解Packet-Tracer&quot;&gt;&lt;a href=&quot;#了解Packet-Tracer&quot; class=&quot;headerlink&quot; title=&quot;了解Packet Tracer&quot;&gt;&lt;/a&gt;了解Packet Tracer&lt;/h2&gt;&lt;p&gt;今天我开学以来第一次上实训基础课，记</summary>
      
    
    
    
    <category term="网络基础" scheme="https://blog.bsgun.cn/categories/%E7%BD%91%E7%BB%9C%E5%9F%BA%E7%A1%80/"/>
    
    
    <category term="网络" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E7%BD%91%E7%BB%9C/"/>
    
    <category term="交换机" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E4%BA%A4%E6%8D%A2%E6%9C%BA/"/>
    
    <category term="思科模拟器" scheme="https://blog.bsgun.cn/%E6%A0%87%E7%AD%BE/%E6%80%9D%E7%A7%91%E6%A8%A1%E6%8B%9F%E5%99%A8/"/>
    
  </entry>
  
</feed>
